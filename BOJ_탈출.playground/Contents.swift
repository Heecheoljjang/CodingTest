import Foundation

//let input = readLine()!.split(separator: " ").map { Int(String($0))! }
let input = [50,50]
//var board: [[String]] = []
//for _ in 0..<input[0] {
//    board.append(readLine()!.map { String($0) })
//}
var board: [[String]] = []
var temp = ["..................................................",
    "............................................XXXXD.",

    "...............................................XXX",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "................................S.................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..................................................",

    "..............................................*...",

    "..................................................",

    "..................................................",

    ".................................................."]
for i in 0..<input[0] {
    board.append(temp[i].map { String($0) })
}
let dx = [1,0,-1,0]
let dy = [0,1,0,-1]
var water = Array(repeating: Array(repeating: -1, count: input[1]), count: input[0])
var hog = Array(repeating: Array(repeating: -1, count: input[1]), count: input[0])
var queue: [[Int]] = []
var target: [Int] = []
var first: [Int] = []
var result = -1
for i in 0..<input[0] {
    for j in 0..<input[1]{
        if board[i][j] == "*" {
            queue.append([i,j])
            water[i][j] = 0
        } else if board[i][j] == "D" {
            target = [i,j]
        } else if board[i][j] == "S" {
            first = [i,j]
            hog[i][j] = 0
        }
    }
}
var idx = 0
while idx < queue.count {
    let current = queue[idx]
    idx += 1
    for i in 0..<dx.count {
        let newX = current[0] + dx[i]
        let newY = current[1] + dy[i]
        if newX < 0 || newY < 0 || newX >= input[0] || newY >= input[1] {
            continue
        }
        if water[newX][newY] != -1 || board[newX][newY] == "X" || board[newX][newY] == "D" {
            continue
        }
        queue.append([newX,newY])
        water[newX][newY] = water[current[0]][current[1]] + 1
    }
}
queue.removeAll()
idx = 0
queue.append(first)
outer: while idx < queue.count {
    let current = queue[idx]
    idx += 1
    for i in 0..<dx.count {
        let newX = current[0] + dx[i]
        let newY = current[1] + dy[i]
        if newX == target[0] && newY == target[1] {
            result = hog[current[0]][current[1]] + 1
            break outer
        }
        if newX < 0 || newY < 0 || newX >= input[0] || newY >= input[1] {
            continue
        }
        if hog[newX][newY] != -1 || board[newX][newY] == "X" {
            continue
        }
        if hog[current[0]][current[1]] + 1 >= water[newX][newY] && water[newX][newY] != -1 {
            continue
        }
        queue.append([newX,newY])
        hog[newX][newY] = hog[current[0]][current[1]] + 1
    }
}
result == -1 ? print("KAKTUS") : print(result)
